#############################################################################
# Makefile for building: libDataLibrary.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.0) on: vie abr 15 09:10:48 2011
# Project:  DataLibrary.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDATALIB_LIBRARY -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I../../../../qtsdk-2010.05/qt/mkspecs/linux-g++ -I. -I../../../../qtsdk-2010.05/qt/include/QtCore -I../../../../qtsdk-2010.05/qt/include/QtGui -I../../../../qtsdk-2010.05/qt/include/QtSql -I../../../../qtsdk-2010.05/qt/include -Irelease
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/home/pmata/qtsdk-2010.05/qt/lib -shared -Wl,-soname,libDataLibrary.so.1
LIBS          = $(SUBLIBS)  -L/home/pmata/qtsdk-2010.05/qt/lib -lQtSql -L/home/pmata/qtsdk-2010.05/qt/lib -lQtGui -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /home/pmata/qtsdk-2010.05/qt/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = main.cpp \
		datalib.cpp \
		database.cpp \
		query.cpp \
		user.cpp \
		privilege.cpp \
		client.cpp \
		certificate.cpp \
		material.cpp \
		chemicalmeasure.cpp \
		mechanicalmeasure.cpp \
		usermapper.cpp \
		clientmapper.cpp \
		materialmapper.cpp \
		certificatemapper.cpp \
		privilegemapper.cpp \
		userpermissionsmapper.cpp \
		clientcodemapper.cpp \
		csvparsingline.cpp \
		csvparsinglinemapper.cpp \
		chemicalanalysis.cpp \
		chemicalanalysismapper.cpp \
		mechanicalanalysis.cpp \
		mechanicalanalysismapper.cpp 
OBJECTS       = release/main.o \
		release/datalib.o \
		release/database.o \
		release/query.o \
		release/user.o \
		release/privilege.o \
		release/client.o \
		release/certificate.o \
		release/material.o \
		release/chemicalmeasure.o \
		release/mechanicalmeasure.o \
		release/usermapper.o \
		release/clientmapper.o \
		release/materialmapper.o \
		release/certificatemapper.o \
		release/privilegemapper.o \
		release/userpermissionsmapper.o \
		release/clientcodemapper.o \
		release/csvparsingline.o \
		release/csvparsinglinemapper.o \
		release/chemicalanalysis.o \
		release/chemicalanalysismapper.o \
		release/mechanicalanalysis.o \
		release/mechanicalanalysismapper.o
DIST          = ../../../../qtsdk-2010.05/qt/mkspecs/common/g++.conf \
		../../../../qtsdk-2010.05/qt/mkspecs/common/unix.conf \
		../../../../qtsdk-2010.05/qt/mkspecs/common/linux.conf \
		../../../../qtsdk-2010.05/qt/mkspecs/qconfig.pri \
		../../../../qtsdk-2010.05/qt/mkspecs/modules/qt_webkit_version.pri \
		../../../../qtsdk-2010.05/qt/mkspecs/features/qt_functions.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/qt_config.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/exclusive_builds.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/default_pre.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/release.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/debug_and_release.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/default_post.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/build_pass.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/warn_on.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/qt.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/unix/thread.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/moc.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/resources.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/uic.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/yacc.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/lex.prf \
		../../../../qtsdk-2010.05/qt/mkspecs/features/include_source_dir.prf \
		DataLibrary.pro
QMAKE_TARGET  = DataLibrary
DESTDIR       = 
TARGET        = libDataLibrary.so.1.0.0
TARGETA       = libDataLibrary.a
TARGETD       = libDataLibrary.so.1.0.0
TARGET0       = libDataLibrary.so
TARGET1       = libDataLibrary.so.1
TARGET2       = libDataLibrary.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Release  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

qmake:  FORCE
	@$(QMAKE) -spec ../../../../qtsdk-2010.05/qt/mkspecs/linux-g++ CONFIG+=debug_and_release CONFIG+=debug -o Makefile.Release DataLibrary.pro

dist: 
	@$(CHK_DIR_EXISTS) release/DataLibrary1.0.0 || $(MKDIR) release/DataLibrary1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/DataLibrary1.0.0/ && $(COPY_FILE) --parents datalib.h database.h query.h DataLib_global.h user.h privilege.h client.h certificate.h material.h chemicalmeasure.h mechanicalmeasure.h usermapper.h clientmapper.h materialmapper.h certificatemapper.h privilegemapper.h userpermissionsmapper.h clientcodemapper.h csvparsingline.h csvparsinglinemapper.h chemicalanalysis.h chemicalanalysismapper.h mechanicalanalysis.h mechanicalanalysismapper.h release/DataLibrary1.0.0/ && $(COPY_FILE) --parents main.cpp datalib.cpp database.cpp query.cpp user.cpp privilege.cpp client.cpp certificate.cpp material.cpp chemicalmeasure.cpp mechanicalmeasure.cpp usermapper.cpp clientmapper.cpp materialmapper.cpp certificatemapper.cpp privilegemapper.cpp userpermissionsmapper.cpp clientcodemapper.cpp csvparsingline.cpp csvparsinglinemapper.cpp chemicalanalysis.cpp chemicalanalysismapper.cpp mechanicalanalysis.cpp mechanicalanalysismapper.cpp release/DataLibrary1.0.0/ && (cd `dirname release/DataLibrary1.0.0` && $(TAR) DataLibrary1.0.0.tar DataLibrary1.0.0 && $(COMPRESS) DataLibrary1.0.0.tar) && $(MOVE) `dirname release/DataLibrary1.0.0`/DataLibrary1.0.0.tar.gz . && $(DEL_FILE) -r release/DataLibrary1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile.Release


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

release/main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/datalib.o: datalib.cpp datalib.h \
		DataLib_global.h \
		user.h \
		privilege.h \
		usermapper.h \
		query.h \
		privilegemapper.h \
		client.h \
		clientmapper.h \
		material.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		materialmapper.h \
		certificate.h \
		certificatemapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/datalib.o datalib.cpp

release/database.o: database.cpp database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/database.o database.cpp

release/query.o: query.cpp query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/query.o query.cpp

release/user.o: user.cpp user.h \
		DataLib_global.h \
		privilege.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/user.o user.cpp

release/privilege.o: privilege.cpp privilege.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/privilege.o privilege.cpp

release/client.o: client.cpp client.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/client.o client.cpp

release/certificate.o: certificate.cpp certificate.h \
		DataLib_global.h \
		client.h \
		user.h \
		privilege.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		material.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/certificate.o certificate.cpp

release/material.o: material.cpp material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/material.o material.cpp

release/chemicalmeasure.o: chemicalmeasure.cpp chemicalmeasure.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/chemicalmeasure.o chemicalmeasure.cpp

release/mechanicalmeasure.o: mechanicalmeasure.cpp mechanicalmeasure.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mechanicalmeasure.o mechanicalmeasure.cpp

release/usermapper.o: usermapper.cpp usermapper.h \
		user.h \
		DataLib_global.h \
		privilege.h \
		query.h \
		userpermissionsmapper.h \
		database.h \
		datalib.h \
		privilegemapper.h \
		client.h \
		clientmapper.h \
		material.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		materialmapper.h \
		certificate.h \
		certificatemapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/usermapper.o usermapper.cpp

release/clientmapper.o: clientmapper.cpp clientmapper.h \
		client.h \
		DataLib_global.h \
		query.h \
		clientcodemapper.h \
		datalib.h \
		user.h \
		privilege.h \
		usermapper.h \
		privilegemapper.h \
		material.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		materialmapper.h \
		certificate.h \
		certificatemapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/clientmapper.o clientmapper.cpp

release/materialmapper.o: materialmapper.cpp materialmapper.h \
		material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/materialmapper.o materialmapper.cpp

release/certificatemapper.o: certificatemapper.cpp certificatemapper.h \
		certificate.h \
		DataLib_global.h \
		client.h \
		user.h \
		privilege.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		material.h \
		query.h \
		clientmapper.h \
		materialmapper.h \
		usermapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/certificatemapper.o certificatemapper.cpp

release/privilegemapper.o: privilegemapper.cpp privilegemapper.h \
		privilege.h \
		DataLib_global.h \
		query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/privilegemapper.o privilegemapper.cpp

release/userpermissionsmapper.o: userpermissionsmapper.cpp userpermissionsmapper.h \
		user.h \
		DataLib_global.h \
		privilege.h \
		usermapper.h \
		query.h \
		privilegemapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/userpermissionsmapper.o userpermissionsmapper.cpp

release/clientcodemapper.o: clientcodemapper.cpp clientcodemapper.h \
		client.h \
		DataLib_global.h \
		clientmapper.h \
		query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/clientcodemapper.o clientcodemapper.cpp

release/csvparsingline.o: csvparsingline.cpp csvparsingline.h \
		DataLib_global.h \
		client.h \
		material.h \
		chemicalmeasure.h \
		mechanicalmeasure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/csvparsingline.o csvparsingline.cpp

release/csvparsinglinemapper.o: csvparsinglinemapper.cpp csvparsinglinemapper.h \
		csvparsingline.h \
		DataLib_global.h \
		client.h \
		material.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		query.h \
		clientmapper.h \
		materialmapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/csvparsinglinemapper.o csvparsinglinemapper.cpp

release/chemicalanalysis.o: chemicalanalysis.cpp chemicalanalysis.h \
		material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		query.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/chemicalanalysis.o chemicalanalysis.cpp

release/chemicalanalysismapper.o: chemicalanalysismapper.cpp chemicalanalysismapper.h \
		chemicalanalysis.h \
		material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		query.h \
		materialmapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/chemicalanalysismapper.o chemicalanalysismapper.cpp

release/mechanicalanalysis.o: mechanicalanalysis.cpp mechanicalanalysis.h \
		material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		query.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mechanicalanalysis.o mechanicalanalysis.cpp

release/mechanicalanalysismapper.o: mechanicalanalysismapper.cpp mechanicalanalysismapper.h \
		mechanicalanalysis.h \
		material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		query.h \
		materialmapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/mechanicalanalysismapper.o mechanicalanalysismapper.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

