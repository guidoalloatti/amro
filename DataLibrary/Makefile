#############################################################################
# Makefile for building: libDataLibrary.so.1.0.0
# Generated by qmake (2.01a) (Qt 4.7.0) on: mar mar 22 18:39:15 2011
# Project:  DataLibrary.pro
# Template: lib
# Command: /opt/qtsdk-2010.05/qt/bin/qmake -spec /opt/qtsdk-2010.05/qt/mkspecs/linux-g++ CONFIG+=debug -o Makefile DataLibrary.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDATALIB_LIBRARY -DQT_SQL_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)
INCPATH       = -I/opt/qtsdk-2010.05/qt/mkspecs/linux-g++ -I. -I/opt/qtsdk-2010.05/qt/include/QtCore -I/opt/qtsdk-2010.05/qt/include/QtSql -I/opt/qtsdk-2010.05/qt/include -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/opt/qtsdk-2010.05/qt/lib -shared -Wl,-soname,libDataLibrary.so.1
LIBS          = $(SUBLIBS)  -L/opt/qtsdk-2010.05/qt/lib -lQtSql -L/opt/qtsdk-2010.05/qt/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /opt/qtsdk-2010.05/qt/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		datalib.cpp \
		database.cpp \
		query.cpp \
		user.cpp \
		privilege.cpp \
		client.cpp \
		certificate.cpp \
		material.cpp \
		chemicalmeasure.cpp \
		mechanicalmeasure.cpp \
		usermapper.cpp \
		clientmapper.cpp \
		materialmapper.cpp \
		certificatemapper.cpp \
		privilegemapper.cpp \
		userpermissionsmapper.cpp \
		clientcodemapper.cpp 
OBJECTS       = main.o \
		datalib.o \
		database.o \
		query.o \
		user.o \
		privilege.o \
		client.o \
		certificate.o \
		material.o \
		chemicalmeasure.o \
		mechanicalmeasure.o \
		usermapper.o \
		clientmapper.o \
		materialmapper.o \
		certificatemapper.o \
		privilegemapper.o \
		userpermissionsmapper.o \
		clientcodemapper.o
DIST          = /opt/qtsdk-2010.05/qt/mkspecs/common/g++.conf \
		/opt/qtsdk-2010.05/qt/mkspecs/common/unix.conf \
		/opt/qtsdk-2010.05/qt/mkspecs/common/linux.conf \
		/opt/qtsdk-2010.05/qt/mkspecs/qconfig.pri \
		/opt/qtsdk-2010.05/qt/mkspecs/modules/qt_webkit_version.pri \
		/opt/qtsdk-2010.05/qt/mkspecs/features/qt_functions.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/qt_config.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/exclusive_builds.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/default_pre.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/debug.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/default_post.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/warn_on.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/qt.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/unix/thread.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/moc.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/resources.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/uic.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/yacc.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/lex.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/include_source_dir.prf \
		DataLibrary.pro
QMAKE_TARGET  = DataLibrary
DESTDIR       = 
TARGET        = libDataLibrary.so.1.0.0
TARGETA       = libDataLibrary.a
TARGETD       = libDataLibrary.so.1.0.0
TARGET0       = libDataLibrary.so
TARGET1       = libDataLibrary.so.1
TARGET2       = libDataLibrary.so.1.0

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)



staticlib: $(TARGETA)

$(TARGETA):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS)

Makefile: DataLibrary.pro  /opt/qtsdk-2010.05/qt/mkspecs/linux-g++/qmake.conf /opt/qtsdk-2010.05/qt/mkspecs/common/g++.conf \
		/opt/qtsdk-2010.05/qt/mkspecs/common/unix.conf \
		/opt/qtsdk-2010.05/qt/mkspecs/common/linux.conf \
		/opt/qtsdk-2010.05/qt/mkspecs/qconfig.pri \
		/opt/qtsdk-2010.05/qt/mkspecs/modules/qt_webkit_version.pri \
		/opt/qtsdk-2010.05/qt/mkspecs/features/qt_functions.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/qt_config.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/exclusive_builds.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/default_pre.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/debug.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/default_post.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/warn_on.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/qt.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/unix/thread.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/moc.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/resources.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/uic.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/yacc.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/lex.prf \
		/opt/qtsdk-2010.05/qt/mkspecs/features/include_source_dir.prf \
		/opt/qtsdk-2010.05/qt/lib/libQtSql.prl \
		/opt/qtsdk-2010.05/qt/lib/libQtCore.prl
	$(QMAKE) -spec /opt/qtsdk-2010.05/qt/mkspecs/linux-g++ CONFIG+=debug -o Makefile DataLibrary.pro
/opt/qtsdk-2010.05/qt/mkspecs/common/g++.conf:
/opt/qtsdk-2010.05/qt/mkspecs/common/unix.conf:
/opt/qtsdk-2010.05/qt/mkspecs/common/linux.conf:
/opt/qtsdk-2010.05/qt/mkspecs/qconfig.pri:
/opt/qtsdk-2010.05/qt/mkspecs/modules/qt_webkit_version.pri:
/opt/qtsdk-2010.05/qt/mkspecs/features/qt_functions.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/qt_config.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/exclusive_builds.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/default_pre.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/debug.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/default_post.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/warn_on.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/qt.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/unix/thread.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/moc.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/resources.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/uic.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/yacc.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/lex.prf:
/opt/qtsdk-2010.05/qt/mkspecs/features/include_source_dir.prf:
/opt/qtsdk-2010.05/qt/lib/libQtSql.prl:
/opt/qtsdk-2010.05/qt/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /opt/qtsdk-2010.05/qt/mkspecs/linux-g++ CONFIG+=debug -o Makefile DataLibrary.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/DataLibrary1.0.0 || $(MKDIR) .tmp/DataLibrary1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/DataLibrary1.0.0/ && $(COPY_FILE) --parents datalib.h database.h query.h DataLib_global.h user.h privilege.h client.h certificate.h material.h chemicalmeasure.h mechanicalmeasure.h usermapper.h clientmapper.h materialmapper.h certificatemapper.h privilegemapper.h userpermissionsmapper.h clientcodemapper.h .tmp/DataLibrary1.0.0/ && $(COPY_FILE) --parents main.cpp datalib.cpp database.cpp query.cpp user.cpp privilege.cpp client.cpp certificate.cpp material.cpp chemicalmeasure.cpp mechanicalmeasure.cpp usermapper.cpp clientmapper.cpp materialmapper.cpp certificatemapper.cpp privilegemapper.cpp userpermissionsmapper.cpp clientcodemapper.cpp .tmp/DataLibrary1.0.0/ && (cd `dirname .tmp/DataLibrary1.0.0` && $(TAR) DataLibrary1.0.0.tar DataLibrary1.0.0 && $(COMPRESS) DataLibrary1.0.0.tar) && $(MOVE) `dirname .tmp/DataLibrary1.0.0`/DataLibrary1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/DataLibrary1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) $(TARGET0) $(TARGET1) $(TARGET2) $(TARGETA)
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

datalib.o: datalib.cpp datalib.h \
		DataLib_global.h \
		user.h \
		privilege.h \
		usermapper.h \
		query.h \
		privilegemapper.h \
		client.h \
		clientmapper.h \
		material.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		materialmapper.h \
		certificate.h \
		certificatemapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datalib.o datalib.cpp

database.o: database.cpp database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o database.o database.cpp

query.o: query.cpp query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o query.o query.cpp

user.o: user.cpp user.h \
		DataLib_global.h \
		privilege.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o user.o user.cpp

privilege.o: privilege.cpp privilege.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o privilege.o privilege.cpp

client.o: client.cpp client.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client.o client.cpp

certificate.o: certificate.cpp certificate.h \
		DataLib_global.h \
		client.h \
		user.h \
		privilege.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		material.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o certificate.o certificate.cpp

material.o: material.cpp material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o material.o material.cpp

chemicalmeasure.o: chemicalmeasure.cpp chemicalmeasure.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o chemicalmeasure.o chemicalmeasure.cpp

mechanicalmeasure.o: mechanicalmeasure.cpp mechanicalmeasure.h \
		DataLib_global.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mechanicalmeasure.o mechanicalmeasure.cpp

usermapper.o: usermapper.cpp usermapper.h \
		user.h \
		DataLib_global.h \
		privilege.h \
		query.h \
		userpermissionsmapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o usermapper.o usermapper.cpp

clientmapper.o: clientmapper.cpp clientmapper.h \
		client.h \
		DataLib_global.h \
		query.h \
		clientcodemapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clientmapper.o clientmapper.cpp

materialmapper.o: materialmapper.cpp materialmapper.h \
		material.h \
		DataLib_global.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o materialmapper.o materialmapper.cpp

certificatemapper.o: certificatemapper.cpp certificatemapper.h \
		certificate.h \
		DataLib_global.h \
		client.h \
		user.h \
		privilege.h \
		chemicalmeasure.h \
		mechanicalmeasure.h \
		material.h \
		query.h \
		clientmapper.h \
		materialmapper.h \
		usermapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o certificatemapper.o certificatemapper.cpp

privilegemapper.o: privilegemapper.cpp privilegemapper.h \
		privilege.h \
		DataLib_global.h \
		query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o privilegemapper.o privilegemapper.cpp

userpermissionsmapper.o: userpermissionsmapper.cpp userpermissionsmapper.h \
		user.h \
		DataLib_global.h \
		privilege.h \
		usermapper.h \
		query.h \
		privilegemapper.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o userpermissionsmapper.o userpermissionsmapper.cpp

clientcodemapper.o: clientcodemapper.cpp clientcodemapper.h \
		client.h \
		DataLib_global.h \
		clientmapper.h \
		query.h \
		database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o clientcodemapper.o clientcodemapper.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

